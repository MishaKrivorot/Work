#include <iostream>
#include <fstream>
#include <iomanip>
#include <stdlib.h>
#include "string"
#include <ctime>
#include <chrono>
#include <thread>
#include <map>

void WriteLog(std::string filename, std::string message)
{
        time_t rawtime;
        struct tm * timeinfo;
        char buffer[80];
        time(&rawtime);
        timeinfo = localtime(&rawtime);
        strftime(buffer, sizeof(buffer), "%d-%m-%Y %H:%M:%S", timeinfo);
        std::string str(buffer);
        std::ofstream file(filename, std::ios_base::app);
        if (file)
        {
                file << str << "        " << message<<std::endl;
                file.close();
        }
}
std::string GetCommandOutput(std::string command)
{
    std::string result = "";
    char buffer[128];
    // ????????? ??????? ????? popen()
    FILE* pipe = popen(command.c_str(), "r");
    if (!pipe)
    {
        return "popen failed!";
    }
    try
    {
        // ??????? ????????? ???????
        while (fgets(buffer, sizeof(buffer), pipe) != NULL)
        {
            result += buffer;
        }
    }
    catch (...)
    {
        pclose(pipe);
        return "Error reading pipe!";
    }
    pclose(pipe);
    return result;
}
int main(void)
{
        std::string logFile;
        logFile = "KI-Kryvorot.log";
        WriteLog(logFile, " Start OK!");
        for (;;)
        {
                std::string commandOutput = GetCommandOutput("top -b -n 1 | grep \"MiB Mem\" | head -n 1");
                WriteLog(logFile, commandOutput);
                std::this_thread::sleep_for(std::chrono::seconds(6));
        }
        return 0;
}
